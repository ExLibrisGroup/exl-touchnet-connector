---
  AWSTemplateFormatVersion: '2010-09-09'
  Transform: AWS::Serverless-2016-10-31
  Description: Ex Libris Touchnet Connetor
  Parameters:
    AlmaApiKey:
      Type: String
      Description: Alma API Key. Obtain at https://developers.exlibrisgroup.com/alma/apis
    UpaySiteId:
      Type: String
      Description: uPay Site ID. Obtain from Touchnet customer service.
    UpaySiteUrl:
      Type: String
      Description: uPay Site URL. Obtain from Touchnet customer service.
    TouchnetWsUrl:
      Type: String
      Description: Optional. Overrides the default Touchnet webservice URL.
      Default: ''
  Resources:
    # https://gist.github.com/jweisman/e7960060022b9b9af18b81c9366f3b45
    'Fn::Transform':
      Name: 'AWS::Include'
      Parameters:
        Location: s3://almadtest/sam/LambdaPublicIP.yaml
    ProxyAPI:
      Type: AWS::Serverless::HttpApi
      Properties:
        DefinitionBody: 
          openapi: "3.0.1"
          info:
            title: "TouchnetConnector"          
          paths:
            /{proxy+}:
              x-amazon-apigateway-any-method:
               x-amazon-apigateway-integration:
                 payloadFormatVersion: "2.0"
                 type: "aws_proxy"
                 httpMethod: "POST"
                 uri:
                   Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TouchnetConnector.Arn}/invocations"
    Dependencies:
      Type: "AWS::Serverless::LayerVersion"
      Properties:
        LayerName: !Sub "${AWS::StackName}-Dependencies"
        ContentUri: ./dependencies
        CompatibleRuntimes:
          - nodejs10.x
          - nodejs12.x
        LicenseInfo: 'Apache-2.0'
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
        Path: "/"
        Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
        - PolicyName: ec2vpcaccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              Resource: "*"          
    LambdaApiGatewayExecutionPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: !GetAtt TouchnetConnector.Arn
        Principal: apigateway.amazonaws.com
        SourceArn: !Join
          - ''
          - - 'arn:aws:execute-api:'
            - !Ref AWS::Region
            - ":"
            - !Ref AWS::AccountId
            - ":"
            - !Ref ProxyAPI
            - "/*/*"
    TouchnetConnector:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: !Sub "${AWS::StackName}-Function"
        CodeUri: ./app
        Layers:
          - !Ref Dependencies
        Handler: lambda.handler
        Role: !GetAtt LambdaExecutionRole.Arn
        Runtime: nodejs14.x
        Timeout: 60
        VpcConfig:
          SecurityGroupIds:
            - !GetAtt pubPrivateVPC.DefaultSecurityGroup
          SubnetIds:
            - !Ref privateSubnet1
            - !Ref privateSubnet2
        Environment:
          Variables:
            ALMA_APIKEY: !Ref AlmaApiKey
            TOUCHNET_WS_URL: !Ref TouchnetWsUrl
            UPAY_SITE_ID: !Ref UpaySiteId
            UPAY_SITE_URL: !Ref UpaySiteUrl
  Outputs:
    ApiUrl:
      Description: URL of the Connector
      Value: !Join
        - ''
        - - https://
          - !Ref ProxyAPI
          - ".execute-api."
          - !Ref AWS::Region
          - ".amazonaws.com/"
      Export: 
        Name: !Join ["-", [!Ref "AWS::StackName","api-url"]]          
    PublicIP:
      Description: Public IP for NAT Gateway
      Value: !Ref natPublicIP
      Export: 
        Name: !Join ["-", [!Ref "AWS::StackName","eip"]]
  